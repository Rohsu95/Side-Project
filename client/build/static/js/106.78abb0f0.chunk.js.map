{"version":3,"file":"static/js/106.78abb0f0.chunk.js","mappings":"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","sources":["cookies.js","page/Editor/style.js","page/Editor/Editor.js","../node_modules/@tanstack/query-core/src/mutationObserver.ts","../node_modules/@tanstack/react-query/src/useMutation.ts"],"sourcesContent":["import { Cookies } from \"react-cookie\";\n\nconst cookies = new Cookies();\n\nexport const setCookie = (name, value, option) => {\n  return cookies.set(name, value, { ...option });\n};\n\nexport const getCookie = (name) => {\n  return cookies.get(name);\n};\n\nexport const removeCookie = (name, option) => {\n  return cookies.remove(name, { ...option });\n};\n","import styled from \"styled-components\";\nimport theme from \"../../styles/Theme\";\n\nexport const EditorContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 1rem;\n\n  input {\n    width: 60vw;\n    display: block;\n    margin-top: 1rem;\n    border-radius: 5px;\n    padding-left: 1rem;\n    border: 1px solid ${theme.colors.gray_01};\n    outline: none;\n  }\n`;\nexport const TitleInput = styled.input`\n  font-size: 1.25rem;\n  height: 4.5vh;\n`;\nexport const ArticleInput = styled.input`\n  height: 3vh;\n`;\nexport const ContentArea = styled.textarea`\n  width: 60vw;\n  height: 15vh;\n  margin-top: 1rem;\n  border-radius: 5px;\n  padding-left: 1rem;\n  padding-top: 0.5rem;\n  border: 1px solid ${theme.colors.gray_01};\n`;\nexport const TagInput = styled.input`\n  height: 3vh;\n`;\nexport const EditorBtn = styled.button`\n  color: white;\n  border: none;\n  float: right;\n  margin-top: 1rem;\n  padding: 0.75rem 1.5rem;\n  border-radius: 5px;\n  background-color: ${theme.colors.main};\n  cursor: pointer;\n`;\nexport const TagDiv = styled.div`\n  margin-top: 0.5rem;\n  width: 60vw;\n  padding-left: 1rem;\n`;\nexport const TagSpan = styled.span`\n  color: ${theme.colors.white};\n  font-size: ${theme.fontSizes.fs06};\n  padding: 0.375rem 0.6rem 0.375rem 0.375rem;\n  border-radius: 15px;\n  margin-right: 0.5rem;\n  background-color: ${theme.colors.tag};\n\n  @media ${theme.media.phone} {\n    font-size: ${theme.fontSizes.fs0};\n  }\n`;\nexport const TagDelete = styled.button`\n  border: none;\n  color: white;\n  background-color: ${theme.colors.tag};\n  margin-right: 0.25rem;\n  font-size: ${theme.fontSizes.fs06};\n  cursor: pointer;\n  margin: 0 0.25rem;\n\n  @media ${theme.media.phone} {\n    font-size: ${theme.fontSizes.fs0};\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { getCookie } from \"cookies\";\nimport { Cookies } from \"react-cookie\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { postPlaces } from \"api/placesAPI\";\n\nconst Editor = ({ userInfo }) => {\n  const cookie = new Cookies();\n  const userId = cookie.get(\"userId\");\n  const username = cookie.get(\"username\");\n  const image = cookie.get(\"image\");\n\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation({\n    mutationKey: \"PLACES_KEY\",\n    mutationFn: postPlaces,\n    onSuccess: (data) => {\n      navigate(\"/\");\n      queryClient.invalidateQueries();\n      // window.location.reload();\n    },\n  });\n\n  const { title, content } = input;\n\n  const onTotal = (e) => {\n    const { name, value } = e.target;\n    setInput({\n      ...input,\n      [name]: value,\n    });\n  };\n\n  // 엔터 누를 시 실행\n  const onKeyPress = (e) => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n  // 삭제\n  const onDelete = (id) => {\n    setTagsList((tagsList) => tagsList.filter((_, el) => el !== id));\n  };\n\n  // 생성\n  const onWriting = () => {\n    let tagsItem = String(tagsList);\n    const now = new Date(Date.now());\n\n    mutate({\n      title: title,\n      content: content,\n      tags: tagsItem,\n      createdAt: now,\n      creator: userId,\n      username: username,\n      image: image,\n    });\n  };\n\n  return (\n    <s.EditorContainer>\n      <div>\n        <s.TitleInput\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onTotal}\n          placeholder=\"Article Title\"\n        />\n        <s.ContentArea\n          type=\"text\"\n          name=\"content\"\n          value={content}\n          onChange={onTotal}\n          placeholder=\"Write your article (in markdown)\"\n        />\n        <s.TagInput\n          type=\"text\"\n          name=\"tags\"\n          value={tags}\n          onChange={(e) => setTags(e.target.value)}\n          onKeyPress={onKeyPress}\n          placeholder=\"태그 작성 후 엔터를 눌러주세요\"\n        />\n        <s.TagDiv>\n          {tagsList.map((el, id) => (\n            <s.TagSpan key={id}>\n              <s.TagDelete\n                aria-label=\"delete_button\"\n                onClick={() => onDelete(id)}\n              >\n                X\n              </s.TagDelete>\n              {el}\n            </s.TagSpan>\n          ))}\n        </s.TagDiv>\n        <s.EditorBtn onClick={onWriting}>Publish Article</s.EditorBtn>\n      </div>\n    </s.EditorContainer>\n  );\n};\nexport default Editor;\n","import { getDefaultState } from './mutation'\nimport { notifyManager } from './notifyManager'\nimport { Subscribable } from './subscribable'\nimport { hashKey, shallowEqualObjects } from './utils'\nimport type { QueryClient } from './queryClient'\nimport type {\n  DefaultError,\n  MutateOptions,\n  MutationObserverOptions,\n  MutationObserverResult,\n} from './types'\nimport type { Action, Mutation } from './mutation'\n\n// TYPES\n\ntype MutationObserverListener<TData, TError, TVariables, TContext> = (\n  result: MutationObserverResult<TData, TError, TVariables, TContext>,\n) => void\n\n// CLASS\n\nexport class MutationObserver<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n> extends Subscribable<\n  MutationObserverListener<TData, TError, TVariables, TContext>\n> {\n  options!: MutationObserverOptions<TData, TError, TVariables, TContext>\n\n  #client: QueryClient\n  #currentResult: MutationObserverResult<TData, TError, TVariables, TContext> =\n    undefined!\n  #currentMutation?: Mutation<TData, TError, TVariables, TContext>\n  #mutateOptions?: MutateOptions<TData, TError, TVariables, TContext>\n\n  constructor(\n    client: QueryClient,\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    super()\n\n    this.#client = client\n    this.setOptions(options)\n    this.bindMethods()\n    this.#updateResult()\n  }\n\n  protected bindMethods(): void {\n    this.mutate = this.mutate.bind(this)\n    this.reset = this.reset.bind(this)\n  }\n\n  setOptions(\n    options: MutationObserverOptions<TData, TError, TVariables, TContext>,\n  ) {\n    const prevOptions = this.options as\n      | MutationObserverOptions<TData, TError, TVariables, TContext>\n      | undefined\n    this.options = this.#client.defaultMutationOptions(options)\n    if (!shallowEqualObjects(prevOptions, this.options)) {\n      this.#client.getMutationCache().notify({\n        type: 'observerOptionsUpdated',\n        mutation: this.#currentMutation,\n        observer: this,\n      })\n    }\n    this.#currentMutation?.setOptions(this.options)\n\n    if (\n      prevOptions?.mutationKey &&\n      this.options.mutationKey &&\n      hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)\n    ) {\n      this.reset()\n    }\n  }\n\n  protected onUnsubscribe(): void {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this)\n    }\n  }\n\n  onMutationUpdate(action: Action<TData, TError, TVariables, TContext>): void {\n    this.#updateResult()\n\n    this.#notify(action)\n  }\n\n  getCurrentResult(): MutationObserverResult<\n    TData,\n    TError,\n    TVariables,\n    TContext\n  > {\n    return this.#currentResult\n  }\n\n  reset(): void {\n    // reset needs to remove the observer from the mutation because there is no way to \"get it back\"\n    // another mutate call will yield a new mutation!\n    this.#currentMutation?.removeObserver(this)\n    this.#currentMutation = undefined\n    this.#updateResult()\n    this.#notify()\n  }\n\n  mutate(\n    variables: TVariables,\n    options?: MutateOptions<TData, TError, TVariables, TContext>,\n  ): Promise<TData> {\n    this.#mutateOptions = options\n\n    this.#currentMutation?.removeObserver(this)\n\n    this.#currentMutation = this.#client\n      .getMutationCache()\n      .build(this.#client, this.options)\n\n    this.#currentMutation.addObserver(this)\n\n    return this.#currentMutation.execute(variables)\n  }\n\n  #updateResult(): void {\n    const state =\n      this.#currentMutation?.state ??\n      getDefaultState<TData, TError, TVariables, TContext>()\n\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === 'pending',\n      isSuccess: state.status === 'success',\n      isError: state.status === 'error',\n      isIdle: state.status === 'idle',\n      mutate: this.mutate,\n      reset: this.reset,\n    } as MutationObserverResult<TData, TError, TVariables, TContext>\n  }\n\n  #notify(action?: Action<TData, TError, TVariables, TContext>): void {\n    notifyManager.batch(() => {\n      // First trigger the mutate callbacks\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables!\n        const context = this.#currentResult.context\n\n        if (action?.type === 'success') {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context!)\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context)\n        } else if (action?.type === 'error') {\n          this.#mutateOptions.onError?.(action.error, variables, context)\n          this.#mutateOptions.onSettled?.(\n            undefined,\n            action.error,\n            variables,\n            context,\n          )\n        }\n      }\n\n      // Then trigger the listeners\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult)\n      })\n    })\n  }\n}\n","'use client'\nimport * as React from 'react'\nimport { MutationObserver, notifyManager } from '@tanstack/query-core'\nimport { useQueryClient } from './QueryClientProvider'\nimport { shouldThrowError } from './utils'\nimport type {\n  UseMutateFunction,\n  UseMutationOptions,\n  UseMutationResult,\n} from './types'\nimport type { DefaultError, QueryClient } from '@tanstack/query-core'\n\n// HOOK\n\nexport function useMutation<\n  TData = unknown,\n  TError = DefaultError,\n  TVariables = void,\n  TContext = unknown,\n>(\n  options: UseMutationOptions<TData, TError, TVariables, TContext>,\n  queryClient?: QueryClient,\n): UseMutationResult<TData, TError, TVariables, TContext> {\n  const client = useQueryClient(queryClient)\n\n  const [observer] = React.useState(\n    () =>\n      new MutationObserver<TData, TError, TVariables, TContext>(\n        client,\n        options,\n      ),\n  )\n\n  React.useEffect(() => {\n    observer.setOptions(options)\n  }, [observer, options])\n\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  const mutate = React.useCallback<\n    UseMutateFunction<TData, TError, TVariables, TContext>\n  >(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop)\n    },\n    [observer],\n  )\n\n  if (\n    result.error &&\n    shouldThrowError(observer.options.throwOnError, [result.error])\n  ) {\n    throw result.error\n  }\n\n  return { ...result, mutate, mutateAsync: result.mutate }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n"],"names":["cookies","Cookies","removeCookie","name","option","remove","_objectSpread","EditorContainer","styled","_templateObject","_taggedTemplateLiteral","theme","TitleInput","_templateObject2","ContentArea","_templateObject3","_templateObject4","TagInput","_templateObject5","EditorBtn","_templateObject6","TagDiv","_templateObject7","TagSpan","_templateObject8","TagDelete","_templateObject9","_ref","userInfo","cookie","userId","get","username","image","_useState","useState","_useState2","_slicedToArray","tags","setTags","_useState3","_useState4","tagsList","setTagsList","_useState5","title","content","_useState6","input","setInput","navigate","useNavigate","queryClient","useQueryClient","mutate","useMutation","mutationKey","mutationFn","postPlaces","onSuccess","data","invalidateQueries","onTotal","e","_e$target","target","value","_defineProperty","onItem","updataed","_toConsumableArray","push","_jsx","s","children","_jsxs","type","onChange","placeholder","onKeyPress","length","key","map","el","id","onClick","filter","_","onDelete","tagsItem","String","now","Date","createdAt","creator","MutationObserver","_client","WeakMap","_currentResult","_currentMutation","_mutateOptions","_updateResult","WeakSet","_notify","_Subscribable","_inherits","_super","_createSuper","client","options","_this","_classCallCheck","call","_classPrivateMethodInitSpec","_assertThisInitialized","_classPrivateFieldInitSpec","writable","_classPrivateFieldSet","setOptions","bindMethods","_classPrivateMethodGet","_updateResult2","_createClass","this","bind","reset","_classPrivateFieldGet2","prevOptions","_classPrivateFieldGet","defaultMutationOptions","shallowEqualObjects","getMutationCache","notify","mutation","observer","hashKey","_classPrivateFieldGet3","hasListeners","removeObserver","action","_notify2","_classPrivateFieldGet4","variables","_classPrivateFieldGet5","build","addObserver","execute","Subscribable","_classPrivateFieldGet6","_classPrivateFieldGet7","state","getDefaultState","isPending","status","isSuccess","isError","isIdle","_this2","notifyManager","_classPrivateFieldGet8","_classPrivateFieldGet9","_classPrivateFieldGet10","_classPrivateFieldGet11","context","onSettled","_classPrivateFieldGet12","_classPrivateFieldGet13","_classPrivateFieldGet14","_classPrivateFieldGet15","onError","error","listeners","forEach","listener","_React$useState","React","result","onStoreChange","subscribe","getCurrentResult","mutateOptions","catch","noop","shouldThrowError","throwOnError","mutateAsync"],"sourceRoot":""}