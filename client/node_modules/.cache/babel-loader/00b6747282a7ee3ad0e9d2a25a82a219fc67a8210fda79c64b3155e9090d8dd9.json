{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/component/Date.js\";\nimport dayjs from \"dayjs\";\nimport React from \"react\";\n\n// // Firebase Timestamp 객체를 JavaScript Date 객체로 변환 createdAt 변환\n// const FormatDate = ({ date }) => {\n//   const jsDate = date.toDate();\n//   const year = jsDate.getFullYear();\n//   const month = String(jsDate.getMonth() + 1).padStart(2, \"0\");\n//   const day = String(jsDate.getDate()).padStart(2, \"0\");\n//   const hours = String(jsDate.getHours()).padStart(2, \"0\");\n//   const minutes = String(jsDate.getMinutes()).padStart(2, \"0\");\n\n//   return `${year}.${month}.${day} ${hours}:${minutes}`;\n// };\n\n// export default FormatDate;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Date = _ref => {\n  let {\n    createdAt\n  } = _ref;\n  const getDay = dayjs(createdAt);\n  const now2 = dayjs().format(\"YY/MM/DD\");\n  if (now2 === getDay.format(\"YY/MM/DD\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getDay.add(9, \"h\").format(\"HH:mm\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: getDay.format(\"YY/MM/DD\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }, this);\n  }\n};\n_c = Date;\nvar _c;\n$RefreshReg$(_c, \"Date\");","map":{"version":3,"names":["dayjs","React","jsxDEV","_jsxDEV","Date","_ref","createdAt","getDay","now2","format","children","add","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/component/Date.js"],"sourcesContent":["import dayjs from \"dayjs\";\nimport React from \"react\";\n\n// // Firebase Timestamp 객체를 JavaScript Date 객체로 변환 createdAt 변환\n// const FormatDate = ({ date }) => {\n//   const jsDate = date.toDate();\n//   const year = jsDate.getFullYear();\n//   const month = String(jsDate.getMonth() + 1).padStart(2, \"0\");\n//   const day = String(jsDate.getDate()).padStart(2, \"0\");\n//   const hours = String(jsDate.getHours()).padStart(2, \"0\");\n//   const minutes = String(jsDate.getMinutes()).padStart(2, \"0\");\n\n//   return `${year}.${month}.${day} ${hours}:${minutes}`;\n// };\n\n// export default FormatDate;\n\nexport const Date = ({ createdAt }) => {\n  const getDay = dayjs(createdAt);\n  const now2 = dayjs().format(\"YY/MM/DD\");\n  if (now2 === getDay.format(\"YY/MM/DD\")) {\n    return <div>{getDay.add(9, \"h\").format(\"HH:mm\")}</div>;\n  } else {\n    return <div>{getDay.format(\"YY/MM/DD\")}</div>;\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,OAAO,MAAMC,IAAI,GAAGC,IAAA,IAAmB;EAAA,IAAlB;IAAEC;EAAU,CAAC,GAAAD,IAAA;EAChC,MAAME,MAAM,GAAGP,KAAK,CAACM,SAAS,CAAC;EAC/B,MAAME,IAAI,GAAGR,KAAK,EAAE,CAACS,MAAM,CAAC,UAAU,CAAC;EACvC,IAAID,IAAI,KAAKD,MAAM,CAACE,MAAM,CAAC,UAAU,CAAC,EAAE;IACtC,oBAAON,OAAA;MAAAO,QAAA,EAAMH,MAAM,CAACI,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAACF,MAAM,CAAC,OAAO;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EACxD,CAAC,MAAM;IACL,oBAAOZ,OAAA;MAAAO,QAAA,EAAMH,MAAM,CAACE,MAAM,CAAC,UAAU;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAC/C;AACF,CAAC;AAACC,EAAA,GARWZ,IAAI;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}