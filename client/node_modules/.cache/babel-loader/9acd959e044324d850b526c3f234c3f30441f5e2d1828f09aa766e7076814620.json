{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/Setting/Setting.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport { patchUser } from \"api/userAPI\";\nimport axios from \"axios\";\nimport { Cookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Setting = () => {\n  _s();\n  var _errors$username, _errors$email, _errors$password;\n  const cookie = new Cookies();\n  const Token = cookie.get(\"token\");\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const {\n    username,\n    email,\n    password\n  } = watch();\n  // console.log(watch(\"email\"));\n\n  // 이메일,비밀번호,displayName 수정\n  // const onSetting = () => {\n  //   const auth = getAuth();\n  //   const user = auth.currentUser;\n\n  //   updateEmail(user, email)\n  //     .then(() => {\n  //       user.getIdToken();\n  //     })\n  //     .then((token) => {\n  //       return updatePassword(user, password);\n  //     })\n  //     .then(() => {\n  //       updateProfile(user, { displayName: displayname });\n  //     })\n  //     .then(() => {\n  //       alert(\"수정 되었습니다.\");\n  //       navigate(\"/mypage\");\n  //       // console.log(\"수정 된다\");\n  //       window.location.reload();\n  //     })\n  //     .catch((error) => {\n  //       // console.log(error);\n  //       alert(\"접속 시간이 초과하였습니다. 새로 로그인 해주세요\");\n  //     });\n  // };\n  // console.log(user);\n\n  const onSetting = async id => {\n    await axios.patch(`http://localhost:8000/api/users/${id}`, {\n      username: watch(\"username\"),\n      email: watch(\"email\"),\n      password: watch(\"password\")\n    }, {\n      headers: {\n        Authorization: `Bearer ${Token}`\n      }\n    }).then(res => {\n      console.log(res);\n      // navigate(\"/mypage\");\n    }).catch(error => {\n      // alert(error.response.data.message);\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(s.Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your Settings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSetting),\n        children: [/*#__PURE__*/_jsxDEV(s.SecondInput, {\n          type: \"text\",\n          placeholder: \"Username\",\n          name: \"username\",\n          ...register(\"username\", {\n            required: \"4자 이상 12자리 이하로 입력해 주세요\",\n            minLength: {\n              value: 4,\n              message: \"4자 이상의 username을 입력해 주세요\"\n            },\n            maxLength: {\n              value: 12,\n              message: \"12자 이하의 usename을 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.SecondInput, {\n          placeholder: \"Email\",\n          name: \"email\",\n          type: \"email\",\n          ...register(\"email\", {\n            required: \"12자 이상 20자 이하로 입력해 주세요\",\n            minLength: {\n              value: 12,\n              message: \"12자 이상의 email을 입력해 주세요\"\n            },\n            maxLength: {\n              value: 20,\n              message: \"20자 이하의 email을 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.SecondInput, {\n          placeholder: \"New Password\",\n          type: \"password\",\n          name: \"password\",\n          ...register(\"password\", {\n            required: \"8자 이상 12자 이하로 입력해 주세요\",\n            minLength: {\n              value: 8,\n              message: \"8자 이상의 password를 입력해 주세요\"\n            },\n            maxLength: {\n              value: 12,\n              message: \"12자 이하의 password를 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(s.SettingBtn, {\n          children: \"Update Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(Setting, \"vfsVrYU7JVehCYZEAYlhrxGLadk=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Setting;\nexport default Setting;\nvar _c;\n$RefreshReg$(_c, \"Setting\");","map":{"version":3,"names":["React","useForm","useNavigate","s","patchUser","axios","Cookies","jsxDEV","_jsxDEV","Setting","_s","_errors$username","_errors$email","_errors$password","cookie","Token","get","navigate","register","handleSubmit","watch","formState","errors","username","email","password","onSetting","id","patch","headers","Authorization","then","res","console","log","catch","error","Container","children","fileName","_jsxFileName","lineNumber","columnNumber","FormContainer","onSubmit","SecondInput","type","placeholder","name","required","minLength","value","message","maxLength","SettingBtn","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/Setting/Setting.js"],"sourcesContent":["import React from \"react\";\n\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport { patchUser } from \"api/userAPI\";\nimport axios from \"axios\";\nimport { Cookies } from \"react-cookie\";\n\nconst Setting = () => {\n  const cookie = new Cookies();\n  const Token = cookie.get(\"token\");\n\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const { username, email, password } = watch();\n  // console.log(watch(\"email\"));\n\n  // 이메일,비밀번호,displayName 수정\n  // const onSetting = () => {\n  //   const auth = getAuth();\n  //   const user = auth.currentUser;\n\n  //   updateEmail(user, email)\n  //     .then(() => {\n  //       user.getIdToken();\n  //     })\n  //     .then((token) => {\n  //       return updatePassword(user, password);\n  //     })\n  //     .then(() => {\n  //       updateProfile(user, { displayName: displayname });\n  //     })\n  //     .then(() => {\n  //       alert(\"수정 되었습니다.\");\n  //       navigate(\"/mypage\");\n  //       // console.log(\"수정 된다\");\n  //       window.location.reload();\n  //     })\n  //     .catch((error) => {\n  //       // console.log(error);\n  //       alert(\"접속 시간이 초과하였습니다. 새로 로그인 해주세요\");\n  //     });\n  // };\n  // console.log(user);\n\n  const onSetting = async (id) => {\n    await axios\n      .patch(\n        `http://localhost:8000/api/users/${id}`,\n        {\n          username: watch(\"username\"),\n          email: watch(\"email\"),\n          password: watch(\"password\"),\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${Token}`,\n          },\n        }\n      )\n      .then((res) => {\n        console.log(res);\n        // navigate(\"/mypage\");\n      })\n      .catch((error) => {\n        // alert(error.response.data.message);\n        console.log(error);\n      });\n  };\n  return (\n    <s.Container>\n      <h1>Your Settings</h1>\n      <s.FormContainer>\n        <form onSubmit={handleSubmit(onSetting)}>\n          <s.SecondInput\n            type=\"text\"\n            placeholder=\"Username\"\n            name=\"username\"\n            {...register(\"username\", {\n              required: \"4자 이상 12자리 이하로 입력해 주세요\",\n              minLength: {\n                value: 4,\n                message: \"4자 이상의 username을 입력해 주세요\",\n              },\n              maxLength: {\n                value: 12,\n                message: \"12자 이하의 usename을 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.username?.message}</span>\n\n          <s.SecondInput\n            placeholder=\"Email\"\n            name=\"email\"\n            type=\"email\"\n            {...register(\"email\", {\n              required: \"12자 이상 20자 이하로 입력해 주세요\",\n              minLength: {\n                value: 12,\n                message: \"12자 이상의 email을 입력해 주세요\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"20자 이하의 email을 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.email?.message}</span>\n\n          <s.SecondInput\n            placeholder=\"New Password\"\n            type=\"password\"\n            name=\"password\"\n            {...register(\"password\", {\n              required: \"8자 이상 12자 이하로 입력해 주세요\",\n              minLength: {\n                value: 8,\n                message: \"8자 이상의 password를 입력해 주세요\",\n              },\n              maxLength: {\n                value: 12,\n                message: \"12자 이하의 password를 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.password?.message}</span>\n\n          <s.SettingBtn>Update Settings</s.SettingBtn>\n        </form>\n      </s.FormContainer>\n    </s.Container>\n  );\n};\n\nexport default Setting;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}