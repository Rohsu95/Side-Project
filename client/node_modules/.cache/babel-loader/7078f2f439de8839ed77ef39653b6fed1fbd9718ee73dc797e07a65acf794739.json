{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/Login/Login.js\",\n  _s = $RefreshSig$();\nimport { authService } from \"fBase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { Cookies } from \"react-cookie\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport { getUser, login } from \"api/userAPI\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  var _errors$email, _errors$password;\n  const navigate = useNavigate();\n  const cookie = new Cookies();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  // user 정보\n\n  const onSubmit = async data => {\n    try {\n      var _res$response, _res$response$data;\n      const res = await login(data);\n      if (res !== null && res !== void 0 && (_res$response = res.response) !== null && _res$response !== void 0 && (_res$response$data = _res$response.data) !== null && _res$response$data !== void 0 && _res$response$data.status) {\n        alert(\"가입된 정보가 없습니다.\");\n      } else if ((res === null || res === void 0 ? void 0 : res.status) === 200) {\n        var _res$data;\n        // const userId1 = res?.data?.body?.token?.userId;\n        // localStorage.setItem(\"userId\", JSON.stringify(userId1));\n\n        const token = res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.token;\n        cookie.set(\"token\", token);\n        // navigate(\"/\");\n\n        console.log(\"로그인 쪽\", res);\n        // window.location.reload();\n      } else {\n        alert(\"잠시 후에 로그인을 해주세요 .\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(s.Container, {\n    children: [/*#__PURE__*/_jsxDEV(s.Sign, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.SignupLink, {\n        to: \"/signup\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup\",\n          children: \"Need an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...register(\"email\", {\n            required: \"12자 이상 20자 이하의 email을 입력해 주세요\",\n            minLength: {\n              value: 12,\n              message: \"12자 이상의 email 입력해 주세요\"\n            },\n            maxLength: {\n              value: 20,\n              message: \"20자 이하의 email을 입력해 주세요\"\n            }\n          }),\n          type: \"email\",\n          className: \"Input\",\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Input\",\n          placeholder: \"Password\",\n          type: \"password\",\n          ...register(\"password\", {\n            required: \"8자 이상 12자 이하의 password를 입력해 주세요\",\n            minLength: {\n              value: 8,\n              message: \"8자 이상의 password를 입력해 주세요\"\n            },\n            maxLength: {\n              value: 12,\n              message: \"12자 이하의 password를 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"HoKfjMZ92ei5+tBlduY2RAS552Q=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["authService","signInWithEmailAndPassword","React","useEffect","useState","Cookies","useForm","useNavigate","s","getUser","login","jsxDEV","_jsxDEV","Login","_s","_errors$email","_errors$password","navigate","cookie","register","handleSubmit","formState","errors","onSubmit","data","_res$response","_res$response$data","res","response","status","alert","_res$data","token","set","console","log","err","Container","children","Sign","fileName","_jsxFileName","lineNumber","columnNumber","SignupLink","to","className","FormContainer","required","minLength","value","message","maxLength","type","placeholder","email","password","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/Login/Login.js"],"sourcesContent":["import { authService } from \"fBase\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useEffect, useState } from \"react\";\nimport { Cookies } from \"react-cookie\";\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport { getUser, login } from \"api/userAPI\";\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const cookie = new Cookies();\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n  // user 정보\n\n  const onSubmit = async (data) => {\n    try {\n      const res = await login(data);\n      if (res?.response?.data?.status) {\n        alert(\"가입된 정보가 없습니다.\");\n      } else if (res?.status === 200) {\n        // const userId1 = res?.data?.body?.token?.userId;\n        // localStorage.setItem(\"userId\", JSON.stringify(userId1));\n\n        const token = res?.data?.token;\n        cookie.set(\"token\", token);\n        // navigate(\"/\");\n\n        console.log(\"로그인 쪽\", res);\n        // window.location.reload();\n      } else {\n        alert(\"잠시 후에 로그인을 해주세요 .\");\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <s.Container>\n      <s.Sign>\n        <h1>Sign In</h1>\n        <s.SignupLink to=\"/signup\">\n          <p className=\"signup\">Need an account?</p>\n        </s.SignupLink>\n      </s.Sign>\n      <s.FormContainer>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <input\n            {...register(\"email\", {\n              required: \"12자 이상 20자 이하의 email을 입력해 주세요\",\n              minLength: {\n                value: 12,\n                message: \"12자 이상의 email 입력해 주세요\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"20자 이하의 email을 입력해 주세요\",\n              },\n            })}\n            type=\"email\"\n            className=\"Input\"\n            placeholder=\"Email\"\n          />\n          <span>{errors?.email?.message}</span>\n\n          <input\n            className=\"Input\"\n            placeholder=\"Password\"\n            type=\"password\"\n            {...register(\"password\", {\n              required: \"8자 이상 12자 이하의 password를 입력해 주세요\",\n              minLength: {\n                value: 8,\n                message: \"8자 이상의 password를 입력해 주세요\",\n              },\n              maxLength: {\n                value: 12,\n                message: \"12자 이하의 password를 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.password?.message}</span>\n          <button>Sign in</button>\n        </form>\n      </s.FormContainer>\n    </s.Container>\n  );\n};\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}