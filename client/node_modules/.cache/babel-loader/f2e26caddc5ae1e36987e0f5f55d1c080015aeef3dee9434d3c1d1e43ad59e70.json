{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/Editor/Editor.js\",\n  _s = $RefreshSig$();\nimport { dbService } from \"fBase\";\nimport { addDoc, collection, Timestamp } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { getCookie } from \"cookies\";\nimport FormatDate from \"component/Date\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = _ref => {\n  _s();\n  let {\n    user\n  } = _ref;\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [like, setLike] = useState(0);\n  const navigate = useNavigate();\n  const {\n    title,\n    content\n  } = input;\n  const onTotal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value\n    });\n  };\n  // 엔터 누를 시 실행\n  const onKeyPress = e => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n  // 삭제\n  const onDelete = id => {\n    setTagsList(tagsList => tagsList.filter((_, el) => el !== id));\n  };\n  // 생성\n  const onClick = async () => {\n    let tagsItem = String(tagsList);\n    const now = new Date(Date.now());\n    try {\n      const editor = {\n        title: title,\n        content: content,\n        tags: tagsItem,\n        createdAt: Timestamp.fromDate(now),\n        displayName: user.displayName,\n        uid: user.uid,\n        attachmentUrl: user.photoURL\n      };\n      if (editor.title.length === 0) {\n        alert(\"Title을 작성해 주세요\");\n      } else if (editor.content.length === 0) {\n        alert(\"Content를 작성해 주세요\");\n      } else {\n        await addDoc(collection(dbService, \"editor\"), editor);\n        // navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const onWriting = async () => {\n    try {\n      let tagsItem = String(tagsList);\n      const now = new Date(Date.now());\n      const res = await axios.post(\"http://localhost:8000/api/places\", {\n        title: title,\n        content: content,\n        tags: tagsItem,\n        // createdAt: Timestamp.fromDate(now),\n        // createdAt: FormatDate,\n        createdAt: now,\n        creator: \"651e73578e79227acd6a8106\"\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        }\n      });\n      console.log(\"게시글 생성 성공\", res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(s.EditorContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(s.TitleInput, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onTotal,\n        placeholder: \"Article Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.ContentArea, {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        onChange: onTotal,\n        placeholder: \"Write your article (in markdown)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.TagInput, {\n        type: \"text\",\n        name: \"tags\",\n        value: tags,\n        onChange: e => setTags(e.target.value),\n        onKeyPress: onKeyPress,\n        placeholder: \"\\uD0DC\\uADF8 \\uC791\\uC131 \\uD6C4 \\uC5D4\\uD130\\uB97C \\uB20C\\uB7EC\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.TagDiv, {\n        children: tagsList.map((el, id) => /*#__PURE__*/_jsxDEV(s.TagSpan, {\n          children: [/*#__PURE__*/_jsxDEV(s.TagDelete, {\n            \"aria-label\": \"delete_button\",\n            onClick: () => onDelete(id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this), el]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.EditorBtn, {\n        onClick: onWriting,\n        children: \"Publish Article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"xKIm7PNVahumwNuyFQjpE12h4Bk=\", false, function () {\n  return [useNavigate];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["dbService","addDoc","collection","Timestamp","React","useState","useNavigate","s","axios","getCookie","FormatDate","jsxDEV","_jsxDEV","Editor","_ref","_s","user","tags","setTags","tagsList","setTagsList","input","setInput","title","content","like","setLike","navigate","onTotal","e","name","value","target","onKeyPress","length","key","onItem","updataed","push","onDelete","id","filter","_","el","onClick","tagsItem","String","now","Date","editor","createdAt","fromDate","displayName","uid","attachmentUrl","photoURL","alert","error","console","log","onWriting","res","post","creator","headers","Authorization","EditorContainer","children","TitleInput","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","ContentArea","TagInput","TagDiv","map","TagSpan","TagDelete","EditorBtn","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/Editor/Editor.js"],"sourcesContent":["import { dbService } from \"fBase\";\nimport { addDoc, collection, Timestamp } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { getCookie } from \"cookies\";\nimport FormatDate from \"component/Date\";\n\nconst Editor = ({ user }) => {\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [like, setLike] = useState(0);\n  const navigate = useNavigate();\n  const { title, content } = input;\n\n  const onTotal = (e) => {\n    const { name, value } = e.target;\n    setInput({\n      ...input,\n      [name]: value,\n    });\n  };\n  // 엔터 누를 시 실행\n  const onKeyPress = (e) => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n  // 삭제\n  const onDelete = (id) => {\n    setTagsList((tagsList) => tagsList.filter((_, el) => el !== id));\n  };\n  // 생성\n  const onClick = async () => {\n    let tagsItem = String(tagsList);\n    const now = new Date(Date.now());\n\n    try {\n      const editor = {\n        title: title,\n        content: content,\n        tags: tagsItem,\n        createdAt: Timestamp.fromDate(now),\n        displayName: user.displayName,\n        uid: user.uid,\n        attachmentUrl: user.photoURL,\n      };\n      if (editor.title.length === 0) {\n        alert(\"Title을 작성해 주세요\");\n      } else if (editor.content.length === 0) {\n        alert(\"Content를 작성해 주세요\");\n      } else {\n        await addDoc(collection(dbService, \"editor\"), editor);\n        // navigate(\"/\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const onWriting = async () => {\n    try {\n      let tagsItem = String(tagsList);\n      const now = new Date(Date.now());\n\n      const res = await axios.post(\n        \"http://localhost:8000/api/places\",\n        {\n          title: title,\n          content: content,\n          tags: tagsItem,\n          // createdAt: Timestamp.fromDate(now),\n          // createdAt: FormatDate,\n          createdAt: now,\n          creator: \"651e73578e79227acd6a8106\",\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`,\n          },\n        }\n      );\n      console.log(\"게시글 생성 성공\", res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <s.EditorContainer>\n      <div>\n        <s.TitleInput\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onTotal}\n          placeholder=\"Article Title\"\n        />\n        <s.ContentArea\n          type=\"text\"\n          name=\"content\"\n          value={content}\n          onChange={onTotal}\n          placeholder=\"Write your article (in markdown)\"\n        />\n        <s.TagInput\n          type=\"text\"\n          name=\"tags\"\n          value={tags}\n          onChange={(e) => setTags(e.target.value)}\n          onKeyPress={onKeyPress}\n          placeholder=\"태그 작성 후 엔터를 눌러주세요\"\n        />\n        <s.TagDiv>\n          {tagsList.map((el, id) => (\n            <s.TagSpan key={id}>\n              <s.TagDelete\n                aria-label=\"delete_button\"\n                onClick={() => onDelete(id)}\n              >\n                X\n              </s.TagDelete>\n              {el}\n            </s.TagSpan>\n          ))}\n        </s.TagDiv>\n        <s.EditorBtn onClick={onWriting}>Publish Article</s.EditorBtn>\n      </div>\n    </s.EditorContainer>\n  );\n};\nexport default Editor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}