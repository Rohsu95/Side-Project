{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/Editor/Editor.js\",\n  _s = $RefreshSig$();\nimport { dbService } from \"fBase\";\nimport { addDoc, collection, Timestamp } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { getCookie } from \"cookies\";\nimport FormatDate from \"component/Date\";\nimport { Cookies } from \"react-cookie\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = _ref => {\n  _s();\n  let {\n    userInfo\n  } = _ref;\n  const cookie = new Cookies();\n  const userId = cookie.get(\"userId\");\n  const username = cookie.get(\"username\");\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [error, setError] = useState(null);\n  const [like, setLike] = useState(0);\n  const navigate = useNavigate();\n  const {\n    title,\n    content\n  } = input;\n  const onTotal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value\n    });\n  };\n  // 엔터 누를 시 실행\n  const onKeyPress = e => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n  // 삭제\n  const onDelete = id => {\n    setTagsList(tagsList => tagsList.filter((_, el) => el !== id));\n  };\n  // 생성\n  // const onClick = async () => {\n  //   let tagsItem = String(tagsList);\n  //   const now = new Date(Date.now());\n\n  //   try {\n  //     const editor = {\n  //       title: title,\n  //       content: content,\n  //       tags: tagsItem,\n  //       createdAt: Timestamp.fromDate(now),\n  //       displayName: user.displayName,\n  //       uid: user.uid,\n  //       attachmentUrl: user.photoURL,\n  //     };\n  //     if (editor.title.length === 0) {\n  //       alert(\"Title을 작성해 주세요\");\n  //     } else if (editor.content.length === 0) {\n  //       alert(\"Content를 작성해 주세요\");\n  //     } else {\n  //       await addDoc(collection(dbService, \"editor\"), editor);\n  //       // navigate(\"/\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  //  회원 가입하면 유저 id가 필요하다 유저 아이디로 crator에 넣어줘야할거 같다 안되면 그냥 처음에 했던 유저 아디만 넣어주자\n  // 유저 컬렉션에 유저 정보에 작성한 게시글의 아디 들어간다.\n  // creator에는 현재 로그인한 유저의 .id가 들어가야한다.\n\n  const onWriting = async () => {\n    try {\n      let tagsItem = String(tagsList);\n      const now = new Date(Date.now());\n      const res = await axios.post(\"http://localhost:8000/api/places\", {\n        title: title,\n        content: content,\n        tags: tagsItem,\n        createdAt: now,\n        creator: userId,\n        username: username\n      }, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${getCookie(\"token\")}`\n        }\n      });\n\n      // if (input.title.length === 0) {\n      //   alert(\"Title을 작성해 주세요\");\n      // } else if (input.content.length === 0) {\n      //   alert(\"Content를 작성해 주세요\");\n      // } else if (tagsItem.length === 0) {\n      //   alert(\"Tags를 작성해 주세요\");\n      // } else {\n      //   // navigate(\"/\");\n      // }\n      console.log(\"게시글 생성 성공\", res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(s.EditorContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(s.TitleInput, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onTotal,\n        placeholder: \"Article Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.ContentArea, {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        onChange: onTotal,\n        placeholder: \"Write your article (in markdown)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.TagInput, {\n        type: \"text\",\n        name: \"tags\",\n        value: tags,\n        onChange: e => setTags(e.target.value),\n        onKeyPress: onKeyPress,\n        placeholder: \"\\uD0DC\\uADF8 \\uC791\\uC131 \\uD6C4 \\uC5D4\\uD130\\uB97C \\uB20C\\uB7EC\\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.TagDiv, {\n        children: tagsList.map((el, id) => /*#__PURE__*/_jsxDEV(s.TagSpan, {\n          children: [/*#__PURE__*/_jsxDEV(s.TagDelete, {\n            \"aria-label\": \"delete_button\",\n            onClick: () => onDelete(id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), el]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.EditorBtn, {\n        onClick: onWriting,\n        children: \"Publish Article\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(Editor, \"a2PTqod6serGTilmFWZC+meHsmw=\", false, function () {\n  return [useNavigate];\n});\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["dbService","addDoc","collection","Timestamp","React","useState","useNavigate","s","axios","getCookie","FormatDate","Cookies","jsxDEV","_jsxDEV","Editor","_ref","_s","userInfo","cookie","userId","get","username","tags","setTags","tagsList","setTagsList","input","setInput","title","content","error","setError","like","setLike","navigate","onTotal","e","name","value","target","onKeyPress","length","key","onItem","updataed","push","onDelete","id","filter","_","el","onWriting","tagsItem","String","now","Date","res","post","createdAt","creator","headers","Authorization","console","log","EditorContainer","children","TitleInput","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","ContentArea","TagInput","TagDiv","map","TagSpan","TagDelete","onClick","EditorBtn","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/Editor/Editor.js"],"sourcesContent":["import { dbService } from \"fBase\";\nimport { addDoc, collection, Timestamp } from \"firebase/firestore\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { getCookie } from \"cookies\";\nimport FormatDate from \"component/Date\";\nimport { Cookies } from \"react-cookie\";\n\nconst Editor = ({ userInfo }) => {\n  const cookie = new Cookies();\n  const userId = cookie.get(\"userId\");\n  const username = cookie.get(\"username\");\n\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n  });\n  const [error, setError] = useState(null);\n\n  const [like, setLike] = useState(0);\n  const navigate = useNavigate();\n  const { title, content } = input;\n\n  const onTotal = (e) => {\n    const { name, value } = e.target;\n    setInput({\n      ...input,\n      [name]: value,\n    });\n  };\n  // 엔터 누를 시 실행\n  const onKeyPress = (e) => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n  // 삭제\n  const onDelete = (id) => {\n    setTagsList((tagsList) => tagsList.filter((_, el) => el !== id));\n  };\n  // 생성\n  // const onClick = async () => {\n  //   let tagsItem = String(tagsList);\n  //   const now = new Date(Date.now());\n\n  //   try {\n  //     const editor = {\n  //       title: title,\n  //       content: content,\n  //       tags: tagsItem,\n  //       createdAt: Timestamp.fromDate(now),\n  //       displayName: user.displayName,\n  //       uid: user.uid,\n  //       attachmentUrl: user.photoURL,\n  //     };\n  //     if (editor.title.length === 0) {\n  //       alert(\"Title을 작성해 주세요\");\n  //     } else if (editor.content.length === 0) {\n  //       alert(\"Content를 작성해 주세요\");\n  //     } else {\n  //       await addDoc(collection(dbService, \"editor\"), editor);\n  //       // navigate(\"/\");\n  //     }\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  //  회원 가입하면 유저 id가 필요하다 유저 아이디로 crator에 넣어줘야할거 같다 안되면 그냥 처음에 했던 유저 아디만 넣어주자\n  // 유저 컬렉션에 유저 정보에 작성한 게시글의 아디 들어간다.\n  // creator에는 현재 로그인한 유저의 .id가 들어가야한다.\n\n  const onWriting = async () => {\n    try {\n      let tagsItem = String(tagsList);\n      const now = new Date(Date.now());\n\n      const res = await axios.post(\n        \"http://localhost:8000/api/places\",\n        {\n          title: title,\n          content: content,\n          tags: tagsItem,\n          createdAt: now,\n          creator: userId,\n          username: username,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${getCookie(\"token\")}`,\n          },\n        }\n      );\n\n      // if (input.title.length === 0) {\n      //   alert(\"Title을 작성해 주세요\");\n      // } else if (input.content.length === 0) {\n      //   alert(\"Content를 작성해 주세요\");\n      // } else if (tagsItem.length === 0) {\n      //   alert(\"Tags를 작성해 주세요\");\n      // } else {\n      //   // navigate(\"/\");\n      // }\n      console.log(\"게시글 생성 성공\", res);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <s.EditorContainer>\n      <div>\n        <s.TitleInput\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onTotal}\n          placeholder=\"Article Title\"\n        />\n        <s.ContentArea\n          type=\"text\"\n          name=\"content\"\n          value={content}\n          onChange={onTotal}\n          placeholder=\"Write your article (in markdown)\"\n        />\n        <s.TagInput\n          type=\"text\"\n          name=\"tags\"\n          value={tags}\n          onChange={(e) => setTags(e.target.value)}\n          onKeyPress={onKeyPress}\n          placeholder=\"태그 작성 후 엔터를 눌러주세요\"\n        />\n        <s.TagDiv>\n          {tagsList.map((el, id) => (\n            <s.TagSpan key={id}>\n              <s.TagDelete\n                aria-label=\"delete_button\"\n                onClick={() => onDelete(id)}\n              >\n                X\n              </s.TagDelete>\n              {el}\n            </s.TagSpan>\n          ))}\n        </s.TagDiv>\n        <s.EditorBtn onClick={onWriting}>Publish Article</s.EditorBtn>\n      </div>\n    </s.EditorContainer>\n  );\n};\nexport default Editor;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}