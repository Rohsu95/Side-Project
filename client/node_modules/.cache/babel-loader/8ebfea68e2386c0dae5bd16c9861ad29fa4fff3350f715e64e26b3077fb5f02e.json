{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/SignUp/Signup.js\",\n  _s = $RefreshSig$();\n// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import * as s from \"./style\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import imageCompression from \"browser-image-compression\";\n\n// const Signup = () => {\n//   const [file, setFile] = useState(null);\n//   // 이코드를 수정해도 백엔드 때문에 이미지가 기본 이미지가 박힌다.그렇기에 이 코드 없어도 될거 같다.\n//   const basic =\n//     \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n//   const {\n//     register,\n//     handleSubmit,\n//     watch,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   // 포스트맨으로 이미지를 보내던지 이미지를 안보내도 기본 이미지가 보내진다.\n//   //\n//   const handleUpload = async () => {\n//     try {\n//       const formData = new FormData();\n\n//       formData.append(\"avatar\", file);\n//       formData.append(\"email\", watch(\"email\"));\n//       formData.append(\"password\", watch(\"password\"));\n//       formData.append(\"username\", watch(\"username\"));\n\n//       const res = await axios.post(\n//         \"http://localhost:8000/api/users/signup\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       console.log(\"회원 가입 성공\", res);\n//       // console.log(\"formData 성공\", formData);\n//       navigate(\"/login\");\n//     } catch (err) {\n//       console.log(err);\n//       // alert(err.response.data.message);\n//     }\n//   };\n//   const handleFileChange = (event) => {\n//     setFile(event.target.files[0]);\n//   };\n//   // console.log(file);\n\n//   const handleDeletePreview = () => {\n//     setFile(null);\n//   };\n\n//   // 회원 가입 로그인 버튼 완료 게시글, 게시글 수정 버튼 호버 시 클자색은 바뀌는데 배경이 안바귄다 한번 찾아보자\n//   return (\n//     <s.Container>\n//       <s.Sign>\n//         <h1>Sign up</h1>\n//         <s.SignupLink to=\"/login\">\n//           <p className=\"signup\">Have an account?</p>\n//         </s.SignupLink>\n//       </s.Sign>\n//       <s.FormContainer>\n//         <form\n//           action=\"/upload\"\n//           encType=\"multipart/form-data\"\n//           onSubmit={handleSubmit(handleUpload)}\n//         >\n//           <s.ImgDiv className={file ? \"\" : \"imgLine\"}>\n//             {file && (\n//               <>\n//                 <img\n//                   className=\"EditImg\"\n//                   src={URL.createObjectURL(file)}\n//                   alt=\"이미지 사진\"\n//                 />\n//                 <button className=\"DeleteBtn\" onClick={handleDeletePreview}>\n//                   X\n//                 </button>\n//               </>\n//             )}\n//           </s.ImgDiv>\n\n//           <label htmlFor=\"input-file\" className=\"label-file\">\n//             프로필 이미지 추가\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"input-file\"\n//             accept=\"image/*\"\n//             name=\"avatar\"\n//             onChange={handleFileChange}\n//             style={{ display: \"none\" }}\n//           />\n\n//           <input\n//             type=\"text\"\n//             className=\"Input\"\n//             placeholder=\"Username\"\n//             {...register(\"username\", {\n//               required: \"4자 이상 12자리 이하의 username을 입력해 주세요\",\n//               minLength: {\n//                 value: 4,\n//                 message: \"4자 이상의 username을 입력해 주세요\",\n//               },\n//               maxLength: {\n//                 value: 12,\n//                 message: \"12자 이하의 usename을 입력해 주세요\",\n//               },\n//             })}\n//           />\n//           <span>{errors?.username?.message}</span>\n//           <input\n//             type=\"email\"\n//             className=\"Input\"\n//             placeholder=\"Email\"\n//             {...register(\"email\", {\n//               required: \"12자 이상 20자 이하의 email을 입력해 주세요\",\n//               minLength: {\n//                 value: 12,\n//                 message: \"12자 이상의 email을 입력해 주세요\",\n//               },\n//               maxLength: {\n//                 value: 20,\n//                 message: \"20자 이하의 email을 입력해 주세요\",\n//               },\n//             })}\n//           />\n//           <span>{errors?.email?.message}</span>\n//           <input\n//             type=\"password\"\n//             className=\"Input\"\n//             placeholder=\"Password\"\n//             {...register(\"password\", {\n//               required: \"8자 이상 12자 이하의 password를 입력해 주세요\",\n//               minLength: {\n//                 value: 8,\n//                 message: \"8자 이상의 password를 입력해 주세요\",\n//               },\n//               maxLength: {\n//                 value: 12,\n//                 message: \"12자 이하의 password를 입력해 주세요\",\n//               },\n//             })}\n//           />\n//           <span>{errors?.password?.message}</span>\n//           <button className=\"SignBtn\">Sign up</button>\n//           {/* </div> */}\n//         </form>\n//       </s.FormContainer>\n//     </s.Container>\n//   );\n// };\n// export default Signup;\n\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport imageCompression from \"browser-image-compression\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  var _errors$username, _errors$email, _errors$password;\n  const [file, setFile] = useState();\n  // 이코드를 수정해도 백엔드 때문에 이미지가 기본 이미지가 박힌다.그렇기에 이 코드 없어도 될거 같다.\n  const basic = \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const navigate = useNavigate();\n\n  // 포스트맨으로 이미지를 보내던지 이미지를 안보내도 기본 이미지가 보내진다.\n  //\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n      formData.append(\"avatar\", file);\n      formData.append(\"email\", watch(\"email\"));\n      formData.append(\"password\", watch(\"password\"));\n      formData.append(\"username\", watch(\"username\"));\n      const res = await axios.post(\"http://localhost:8000/api/users/signup\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      console.log(\"회원 가입 성공\", res);\n      // console.log(\"formData 성공\", formData);\n      navigate(\"/login\");\n    } catch (err) {\n      console.log(err);\n      // alert(err.response.data.message);\n    }\n  };\n\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  // console.log(file);\n\n  const handleDeletePreview = () => {\n    setFile(null);\n  };\n  //\n\n  const onChangeImg = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    if (e.target.files) {\n      const uploadFile = e.target.files[0];\n      formData.append(\"file\", uploadFile);\n      setFile(uploadFile);\n      console.log(uploadFile);\n      console.log(\"===useState===\");\n      console.log(file);\n    }\n  };\n  const onClickLogin2 = e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"email\", watch(\"email\"));\n    formData.append(\"password\", watch(\"password\"));\n    formData.append(\"username\", watch(\"username\"));\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8000/api/users/signup\",\n      data: formData\n    }).then(result => {\n      console.log(\"요청성공\");\n      console.log(result);\n    }).catch(error => {\n      console.log(\"요청실패\");\n      console.log(error);\n    });\n  };\n\n  // 회원 가입 로그인 버튼 완료 게시글, 게시글 수정 버튼 호버 시 클자색은 바뀌는데 배경이 안바귄다 한번 찾아보자\n  return /*#__PURE__*/_jsxDEV(s.Container, {\n    children: [/*#__PURE__*/_jsxDEV(s.Sign, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.SignupLink, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"signup\",\n          children: \"Have an account?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(s.FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"/upload\",\n        encType: \"multipart/form-data\",\n        onSubmit: handleSubmit(onClickLogin2),\n        children: [/*#__PURE__*/_jsxDEV(s.ImgDiv, {\n          className: file ? \"\" : \"imgLine\",\n          children: file && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"EditImg\",\n              src: URL.createObjectURL(file),\n              alt: \"\\uC774\\uBBF8\\uC9C0 \\uC0AC\\uC9C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"DeleteBtn\",\n              onClick: handleDeletePreview,\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"input-file\",\n          className: \"label-file\",\n          children: \"\\uD504\\uB85C\\uD544 \\uC774\\uBBF8\\uC9C0 \\uCD94\\uAC00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"input-file\",\n          accept: \"image/*\",\n          name: \"avatar\",\n          onChange: onChangeImg,\n          style: {\n            display: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"Input\",\n          placeholder: \"Username\",\n          ...register(\"username\", {\n            required: \"4자 이상 12자리 이하의 username을 입력해 주세요\",\n            minLength: {\n              value: 4,\n              message: \"4자 이상의 username을 입력해 주세요\"\n            },\n            maxLength: {\n              value: 12,\n              message: \"12자 이하의 usename을 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$username = errors.username) === null || _errors$username === void 0 ? void 0 : _errors$username.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: \"Input\",\n          placeholder: \"Email\",\n          ...register(\"email\", {\n            required: \"12자 이상 20자 이하의 email을 입력해 주세요\",\n            minLength: {\n              value: 12,\n              message: \"12자 이상의 email을 입력해 주세요\"\n            },\n            maxLength: {\n              value: 20,\n              message: \"20자 이하의 email을 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"Input\",\n          placeholder: \"Password\",\n          ...register(\"password\", {\n            required: \"8자 이상 12자 이하의 password를 입력해 주세요\",\n            minLength: {\n              value: 8,\n              message: \"8자 이상의 password를 입력해 주세요\"\n            },\n            maxLength: {\n              value: 12,\n              message: \"12자 이하의 password를 입력해 주세요\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: errors === null || errors === void 0 ? void 0 : (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"SignBtn\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 257,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"y1hZQ+4m+zK9H+W1J3kdlpNkHZc=\", false, function () {\n  return [useForm, useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["useForm","useNavigate","s","axios","useState","imageCompression","jsxDEV","_jsxDEV","Fragment","_Fragment","Signup","_s","_errors$username","_errors$email","_errors$password","file","setFile","basic","register","handleSubmit","watch","formState","errors","navigate","handleUpload","formData","FormData","append","res","post","headers","console","log","err","handleFileChange","event","target","files","handleDeletePreview","onChangeImg","e","preventDefault","uploadFile","onClickLogin2","method","url","data","then","result","catch","error","Container","children","Sign","fileName","_jsxFileName","lineNumber","columnNumber","SignupLink","to","className","FormContainer","action","encType","onSubmit","ImgDiv","src","URL","createObjectURL","alt","onClick","htmlFor","type","id","accept","name","onChange","style","display","placeholder","required","minLength","value","message","maxLength","username","email","password","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/SignUp/Signup.js"],"sourcesContent":["// import { useForm } from \"react-hook-form\";\n// import { useNavigate } from \"react-router-dom\";\n// import * as s from \"./style\";\n// import axios from \"axios\";\n// import { useState } from \"react\";\n// import imageCompression from \"browser-image-compression\";\n\n// const Signup = () => {\n//   const [file, setFile] = useState(null);\n//   // 이코드를 수정해도 백엔드 때문에 이미지가 기본 이미지가 박힌다.그렇기에 이 코드 없어도 될거 같다.\n//   const basic =\n//     \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n//   const {\n//     register,\n//     handleSubmit,\n//     watch,\n//     formState: { errors },\n//   } = useForm();\n//   const navigate = useNavigate();\n\n//   // 포스트맨으로 이미지를 보내던지 이미지를 안보내도 기본 이미지가 보내진다.\n//   //\n//   const handleUpload = async () => {\n//     try {\n//       const formData = new FormData();\n\n//       formData.append(\"avatar\", file);\n//       formData.append(\"email\", watch(\"email\"));\n//       formData.append(\"password\", watch(\"password\"));\n//       formData.append(\"username\", watch(\"username\"));\n\n//       const res = await axios.post(\n//         \"http://localhost:8000/api/users/signup\",\n//         formData,\n//         {\n//           headers: {\n//             \"Content-Type\": \"multipart/form-data\",\n//           },\n//         }\n//       );\n//       console.log(\"회원 가입 성공\", res);\n//       // console.log(\"formData 성공\", formData);\n//       navigate(\"/login\");\n//     } catch (err) {\n//       console.log(err);\n//       // alert(err.response.data.message);\n//     }\n//   };\n//   const handleFileChange = (event) => {\n//     setFile(event.target.files[0]);\n//   };\n//   // console.log(file);\n\n//   const handleDeletePreview = () => {\n//     setFile(null);\n//   };\n\n//   // 회원 가입 로그인 버튼 완료 게시글, 게시글 수정 버튼 호버 시 클자색은 바뀌는데 배경이 안바귄다 한번 찾아보자\n//   return (\n//     <s.Container>\n//       <s.Sign>\n//         <h1>Sign up</h1>\n//         <s.SignupLink to=\"/login\">\n//           <p className=\"signup\">Have an account?</p>\n//         </s.SignupLink>\n//       </s.Sign>\n//       <s.FormContainer>\n//         <form\n//           action=\"/upload\"\n//           encType=\"multipart/form-data\"\n//           onSubmit={handleSubmit(handleUpload)}\n//         >\n//           <s.ImgDiv className={file ? \"\" : \"imgLine\"}>\n//             {file && (\n//               <>\n//                 <img\n//                   className=\"EditImg\"\n//                   src={URL.createObjectURL(file)}\n//                   alt=\"이미지 사진\"\n//                 />\n//                 <button className=\"DeleteBtn\" onClick={handleDeletePreview}>\n//                   X\n//                 </button>\n//               </>\n//             )}\n//           </s.ImgDiv>\n\n//           <label htmlFor=\"input-file\" className=\"label-file\">\n//             프로필 이미지 추가\n//           </label>\n//           <input\n//             type=\"file\"\n//             id=\"input-file\"\n//             accept=\"image/*\"\n//             name=\"avatar\"\n//             onChange={handleFileChange}\n//             style={{ display: \"none\" }}\n//           />\n\n//           <input\n//             type=\"text\"\n//             className=\"Input\"\n//             placeholder=\"Username\"\n//             {...register(\"username\", {\n//               required: \"4자 이상 12자리 이하의 username을 입력해 주세요\",\n//               minLength: {\n//                 value: 4,\n//                 message: \"4자 이상의 username을 입력해 주세요\",\n//               },\n//               maxLength: {\n//                 value: 12,\n//                 message: \"12자 이하의 usename을 입력해 주세요\",\n//               },\n//             })}\n//           />\n//           <span>{errors?.username?.message}</span>\n//           <input\n//             type=\"email\"\n//             className=\"Input\"\n//             placeholder=\"Email\"\n//             {...register(\"email\", {\n//               required: \"12자 이상 20자 이하의 email을 입력해 주세요\",\n//               minLength: {\n//                 value: 12,\n//                 message: \"12자 이상의 email을 입력해 주세요\",\n//               },\n//               maxLength: {\n//                 value: 20,\n//                 message: \"20자 이하의 email을 입력해 주세요\",\n//               },\n//             })}\n//           />\n//           <span>{errors?.email?.message}</span>\n//           <input\n//             type=\"password\"\n//             className=\"Input\"\n//             placeholder=\"Password\"\n//             {...register(\"password\", {\n//               required: \"8자 이상 12자 이하의 password를 입력해 주세요\",\n//               minLength: {\n//                 value: 8,\n//                 message: \"8자 이상의 password를 입력해 주세요\",\n//               },\n//               maxLength: {\n//                 value: 12,\n//                 message: \"12자 이하의 password를 입력해 주세요\",\n//               },\n//             })}\n//           />\n//           <span>{errors?.password?.message}</span>\n//           <button className=\"SignBtn\">Sign up</button>\n//           {/* </div> */}\n//         </form>\n//       </s.FormContainer>\n//     </s.Container>\n//   );\n// };\n// export default Signup;\n\nimport { useForm } from \"react-hook-form\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport imageCompression from \"browser-image-compression\";\n\nconst Signup = () => {\n  const [file, setFile] = useState();\n  // 이코드를 수정해도 백엔드 때문에 이미지가 기본 이미지가 박힌다.그렇기에 이 코드 없어도 될거 같다.\n  const basic =\n    \"https://cdn.pixabay.com/photo/2015/10/05/22/37/blank-profile-picture-973460_1280.png\";\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors },\n  } = useForm();\n  const navigate = useNavigate();\n\n  // 포스트맨으로 이미지를 보내던지 이미지를 안보내도 기본 이미지가 보내진다.\n  //\n  const handleUpload = async () => {\n    try {\n      const formData = new FormData();\n\n      formData.append(\"avatar\", file);\n      formData.append(\"email\", watch(\"email\"));\n      formData.append(\"password\", watch(\"password\"));\n      formData.append(\"username\", watch(\"username\"));\n\n      const res = await axios.post(\n        \"http://localhost:8000/api/users/signup\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      console.log(\"회원 가입 성공\", res);\n      // console.log(\"formData 성공\", formData);\n      navigate(\"/login\");\n    } catch (err) {\n      console.log(err);\n      // alert(err.response.data.message);\n    }\n  };\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n  // console.log(file);\n\n  const handleDeletePreview = () => {\n    setFile(null);\n  };\n  //\n\n  const onChangeImg = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    if (e.target.files) {\n      const uploadFile = e.target.files[0];\n      formData.append(\"file\", uploadFile);\n      setFile(uploadFile);\n      console.log(uploadFile);\n      console.log(\"===useState===\");\n      console.log(file);\n    }\n  };\n\n  const onClickLogin2 = (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append(\"file\", file);\n    formData.append(\"email\", watch(\"email\"));\n    formData.append(\"password\", watch(\"password\"));\n    formData.append(\"username\", watch(\"username\"));\n    axios({\n      method: \"post\",\n      url: \"http://localhost:8000/api/users/signup\",\n      data: formData,\n    })\n      .then((result) => {\n        console.log(\"요청성공\");\n        console.log(result);\n      })\n      .catch((error) => {\n        console.log(\"요청실패\");\n        console.log(error);\n      });\n  };\n\n  // 회원 가입 로그인 버튼 완료 게시글, 게시글 수정 버튼 호버 시 클자색은 바뀌는데 배경이 안바귄다 한번 찾아보자\n  return (\n    <s.Container>\n      <s.Sign>\n        <h1>Sign up</h1>\n        <s.SignupLink to=\"/login\">\n          <p className=\"signup\">Have an account?</p>\n        </s.SignupLink>\n      </s.Sign>\n      <s.FormContainer>\n        <form\n          action=\"/upload\"\n          encType=\"multipart/form-data\"\n          onSubmit={handleSubmit(onClickLogin2)}\n        >\n          <s.ImgDiv className={file ? \"\" : \"imgLine\"}>\n            {file && (\n              <>\n                <img\n                  className=\"EditImg\"\n                  src={URL.createObjectURL(file)}\n                  alt=\"이미지 사진\"\n                />\n                <button className=\"DeleteBtn\" onClick={handleDeletePreview}>\n                  X\n                </button>\n              </>\n            )}\n          </s.ImgDiv>\n\n          <label htmlFor=\"input-file\" className=\"label-file\">\n            프로필 이미지 추가\n          </label>\n          <input\n            type=\"file\"\n            id=\"input-file\"\n            accept=\"image/*\"\n            name=\"avatar\"\n            onChange={onChangeImg}\n            style={{ display: \"none\" }}\n          />\n\n          <input\n            type=\"text\"\n            className=\"Input\"\n            placeholder=\"Username\"\n            {...register(\"username\", {\n              required: \"4자 이상 12자리 이하의 username을 입력해 주세요\",\n              minLength: {\n                value: 4,\n                message: \"4자 이상의 username을 입력해 주세요\",\n              },\n              maxLength: {\n                value: 12,\n                message: \"12자 이하의 usename을 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.username?.message}</span>\n          <input\n            type=\"email\"\n            className=\"Input\"\n            placeholder=\"Email\"\n            {...register(\"email\", {\n              required: \"12자 이상 20자 이하의 email을 입력해 주세요\",\n              minLength: {\n                value: 12,\n                message: \"12자 이상의 email을 입력해 주세요\",\n              },\n              maxLength: {\n                value: 20,\n                message: \"20자 이하의 email을 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.email?.message}</span>\n          <input\n            type=\"password\"\n            className=\"Input\"\n            placeholder=\"Password\"\n            {...register(\"password\", {\n              required: \"8자 이상 12자 이하의 password를 입력해 주세요\",\n              minLength: {\n                value: 8,\n                message: \"8자 이상의 password를 입력해 주세요\",\n              },\n              maxLength: {\n                value: 12,\n                message: \"12자 이하의 password를 입력해 주세요\",\n              },\n            })}\n          />\n          <span>{errors?.password?.message}</span>\n          <button className=\"SignBtn\">Sign up</button>\n          {/* </div> */}\n        </form>\n      </s.FormContainer>\n    </s.Container>\n  );\n};\nexport default Signup;\n"],"mappingsiBAAiB;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,CAAC,MAAM,SAAS;AAC5B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,gBAAgB,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAA,IAAAC,gBAAA,EAAAC,aAAA,EAAAC,gBAAA;EACnB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,EAAE;EAClC;EACA,MAAMa,KAAK,GACT,sFAAsF;EACxF,MAAM;IACJC,QAAQ;IACRC,YAAY;IACZC,KAAK;IACLC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGtB,OAAO,EAAE;EACb,MAAMuB,QAAQ,GAAGtB,WAAW,EAAE;;EAE9B;EACA;EACA,MAAMuB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;MAE/BD,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEZ,IAAI,CAAC;MAC/BU,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC,OAAO,CAAC,CAAC;MACxCK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEP,KAAK,CAAC,UAAU,CAAC,CAAC;MAC9CK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEP,KAAK,CAAC,UAAU,CAAC,CAAC;MAE9C,MAAMQ,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,IAAI,CAC1B,wCAAwC,EACxCJ,QAAQ,EACR;QACEK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CACF;MACDC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEJ,GAAG,CAAC;MAC5B;MACAL,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZF,OAAO,CAACC,GAAG,CAACC,GAAG,CAAC;MAChB;IACF;EACF,CAAC;;EACD,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClCnB,OAAO,CAACmB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EACD;;EAEA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChCtB,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EACD;;EAEA,MAAMuB,WAAW,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMhB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE/B,IAAIc,CAAC,CAACJ,MAAM,CAACC,KAAK,EAAE;MAClB,MAAMK,UAAU,GAAGF,CAAC,CAACJ,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MACpCZ,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEe,UAAU,CAAC;MACnC1B,OAAO,CAAC0B,UAAU,CAAC;MACnBX,OAAO,CAACC,GAAG,CAACU,UAAU,CAAC;MACvBX,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BD,OAAO,CAACC,GAAG,CAACjB,IAAI,CAAC;IACnB;EACF,CAAC;EAED,MAAM4B,aAAa,GAAIH,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,EAAE;IAClB,MAAMhB,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAE/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAC7BU,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEP,KAAK,CAAC,OAAO,CAAC,CAAC;IACxCK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEP,KAAK,CAAC,UAAU,CAAC,CAAC;IAC9CK,QAAQ,CAACE,MAAM,CAAC,UAAU,EAAEP,KAAK,CAAC,UAAU,CAAC,CAAC;IAC9CjB,KAAK,CAAC;MACJyC,MAAM,EAAE,MAAM;MACdC,GAAG,EAAE,wCAAwC;MAC7CC,IAAI,EAAErB;IACR,CAAC,CAAC,CACCsB,IAAI,CAAEC,MAAM,IAAK;MAChBjB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACgB,MAAM,CAAC;IACrB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBnB,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;MACnBD,OAAO,CAACC,GAAG,CAACkB,KAAK,CAAC;IACpB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,oBACE3C,OAAA,CAACL,CAAC,CAACiD,SAAS;IAAAC,QAAA,gBACV7C,OAAA,CAACL,CAAC,CAACmD,IAAI;MAAAD,QAAA,gBACL7C,OAAA;QAAA6C,QAAA,EAAI;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChBlD,OAAA,CAACL,CAAC,CAACwD,UAAU;QAACC,EAAE,EAAC,QAAQ;QAAAP,QAAA,eACvB7C,OAAA;UAAGqD,SAAS,EAAC,QAAQ;UAAAR,QAAA,EAAC;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAI;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACTlD,OAAA,CAACL,CAAC,CAAC2D,aAAa;MAAAT,QAAA,eACd7C,OAAA;QACEuD,MAAM,EAAC,SAAS;QAChBC,OAAO,EAAC,qBAAqB;QAC7BC,QAAQ,EAAE7C,YAAY,CAACwB,aAAa,CAAE;QAAAS,QAAA,gBAEtC7C,OAAA,CAACL,CAAC,CAAC+D,MAAM;UAACL,SAAS,EAAE7C,IAAI,GAAG,EAAE,GAAG,SAAU;UAAAqC,QAAA,EACxCrC,IAAI,iBACHR,OAAA,CAAAE,SAAA;YAAA2C,QAAA,gBACE7C,OAAA;cACEqD,SAAS,EAAC,SAAS;cACnBM,GAAG,EAAEC,GAAG,CAACC,eAAe,CAACrD,IAAI,CAAE;cAC/BsD,GAAG,EAAC;YAAQ;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QACZ,eACFlD,OAAA;cAAQqD,SAAS,EAAC,WAAW;cAACU,OAAO,EAAEhC,mBAAoB;cAAAc,QAAA,EAAC;YAE5D;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAS;UAAA;QAEZ;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACQ,eAEXlD,OAAA;UAAOgE,OAAO,EAAC,YAAY;UAACX,SAAS,EAAC,YAAY;UAAAR,QAAA,EAAC;QAEnD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACRlD,OAAA;UACEiE,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,YAAY;UACfC,MAAM,EAAC,SAAS;UAChBC,IAAI,EAAC,QAAQ;UACbC,QAAQ,EAAErC,WAAY;UACtBsC,KAAK,EAAE;YAAEC,OAAO,EAAE;UAAO;QAAE;UAAAxB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3B,eAEFlD,OAAA;UACEiE,IAAI,EAAC,MAAM;UACXZ,SAAS,EAAC,OAAO;UACjBmB,WAAW,EAAC,UAAU;UAAA,GAClB7D,QAAQ,CAAC,UAAU,EAAE;YACvB8D,QAAQ,EAAE,kCAAkC;YAC5CC,SAAS,EAAE;cACTC,KAAK,EAAE,CAAC;cACRC,OAAO,EAAE;YACX,CAAC;YACDC,SAAS,EAAE;cACTF,KAAK,EAAE,EAAE;cACTC,OAAO,EAAE;YACX;UACF,CAAC;QAAC;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,eACFlD,OAAA;UAAA6C,QAAA,EAAO9B,MAAM,aAANA,MAAM,wBAAAV,gBAAA,GAANU,MAAM,CAAE+D,QAAQ,cAAAzE,gBAAA,uBAAhBA,gBAAA,CAAkBuE;QAAO;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACxClD,OAAA;UACEiE,IAAI,EAAC,OAAO;UACZZ,SAAS,EAAC,OAAO;UACjBmB,WAAW,EAAC,OAAO;UAAA,GACf7D,QAAQ,CAAC,OAAO,EAAE;YACpB8D,QAAQ,EAAE,+BAA+B;YACzCC,SAAS,EAAE;cACTC,KAAK,EAAE,EAAE;cACTC,OAAO,EAAE;YACX,CAAC;YACDC,SAAS,EAAE;cACTF,KAAK,EAAE,EAAE;cACTC,OAAO,EAAE;YACX;UACF,CAAC;QAAC;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,eACFlD,OAAA;UAAA6C,QAAA,EAAO9B,MAAM,aAANA,MAAM,wBAAAT,aAAA,GAANS,MAAM,CAAEgE,KAAK,cAAAzE,aAAA,uBAAbA,aAAA,CAAesE;QAAO;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACrClD,OAAA;UACEiE,IAAI,EAAC,UAAU;UACfZ,SAAS,EAAC,OAAO;UACjBmB,WAAW,EAAC,UAAU;UAAA,GAClB7D,QAAQ,CAAC,UAAU,EAAE;YACvB8D,QAAQ,EAAE,iCAAiC;YAC3CC,SAAS,EAAE;cACTC,KAAK,EAAE,CAAC;cACRC,OAAO,EAAE;YACX,CAAC;YACDC,SAAS,EAAE;cACTF,KAAK,EAAE,EAAE;cACTC,OAAO,EAAE;YACX;UACF,CAAC;QAAC;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACF,eACFlD,OAAA;UAAA6C,QAAA,EAAO9B,MAAM,aAANA,MAAM,wBAAAR,gBAAA,GAANQ,MAAM,CAAEiE,QAAQ,cAAAzE,gBAAA,uBAAhBA,gBAAA,CAAkBqE;QAAO;UAAA7B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAQ,eACxClD,OAAA;UAAQqD,SAAS,EAAC,SAAS;UAAAR,QAAA,EAAC;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAEvC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAElB,CAAC;AAAC9C,EAAA,CA3LID,MAAM;EAAA,QAUNV,OAAO,EACMC,WAAW;AAAA;AAAAuF,EAAA,GAXxB9E,MAAM;AA4LZ,eAAeA,MAAM;AAAC,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}