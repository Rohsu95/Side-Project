{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/Main/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\nimport { Cookies } from \"react-cookie\";\nimport * as s from \"./style\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport theme from \"styles/Theme\";\nimport { getUser } from \"api/userAPI\";\nimport { deletePlaces, getPlaces } from \"api/writingAPI\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const cookie = new Cookies();\n  const Token = cookie.get(\"token\");\n  // 쿠키에 담긴 userId\n  const userId = cookie.get(\"userId\");\n\n  // 2가지 menu\n  const [menu, setMenu] = useState(0);\n  const MainMenu = [{\n    name: \"Global Articles\"\n  }, {\n    name: \"My Articles\"\n  }];\n\n  // user 정보\n  const [userInfo, setUserInfo] = useState([]);\n  // place(게시글) 정보\n  const [userPlace, setUserPlace] = useState([]);\n\n  // 이동\n  const navigate = useNavigate();\n  // 내가 작성한 글이 없는 경우\n  // userId가 find로 찾은 place에 없다면\n  const myPlace = userPlace === null || userPlace === void 0 ? void 0 : userPlace.filter(el => el.creator === userId);\n  console.log(\"myPlace\", myPlace);\n  const mainCurrent = index => {\n    setMenu(index);\n  };\n\n  // 작성한 글 삭제\n  const onDeletePage = async id => {\n    if (!window.confirm(\"삭제 하시겠습니까?\")) {\n      alert(\"취소하였습니다.\");\n    } else {\n      await deletePlaces(Token, id);\n      window.location.reload();\n    }\n  };\n  useEffect(() => {\n    const getUserInfo = async () => {\n      var _res$data;\n      const res = await getUser();\n      setUserInfo(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.users);\n    };\n    getUserInfo();\n  }, []);\n  console.log(\"userInfo이다\", userInfo);\n  useEffect(() => {\n    const getPlaceInfo = async () => {\n      var _res$data2;\n      const res = await getPlaces();\n      setUserPlace(res === null || res === void 0 ? void 0 : (_res$data2 = res.data) === null || _res$data2 === void 0 ? void 0 : _res$data2.places);\n    };\n    getPlaceInfo();\n  }, []);\n  // console.log(\"userPlace\", userPlace);\n\n  return /*#__PURE__*/_jsxDEV(s.MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(s.MainImg, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"Container\",\n        children: \"conduit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Span\",\n        children: \"A place to share your knowledge.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(s.MainUl, {\n        children: MainMenu.map((el, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: menu === index ? \"Main-item focused\" : \"Main-item\",\n              onClick: () => mainCurrent(index),\n              children: el.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), menu === 0 ? userPlace.map((item, key) => /*#__PURE__*/_jsxDEV(s.MainMap, {\n      children: /*#__PURE__*/_jsxDEV(s.MainBorder, {\n        children: [/*#__PURE__*/_jsxDEV(s.MapInfo, {\n          children: [/*#__PURE__*/_jsxDEV(s.MapPicture, {\n            children: /*#__PURE__*/_jsxDEV(s.Img, {\n              src:\n              // 이미지 부분은 뭐 ecss머시기 있잖아 그거 확인해보자 메인 프젝한거 확인ㅇ해보자\n              // item.uid === user.uid\n              //   ? user?.photoURL\n              //   : item?.attachmentUrl\n              userInfo.image\n              // `http://localhost:8000/${userInfo[2]?.image}`\n              ,\n\n              alt: \"profile\"\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(s.Info, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(s.MapName, {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(s.MapTime, {\n                children: item.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Like\",\n              children: Token && item.creator === userId ? /*#__PURE__*/_jsxDEV(s.InfoBtn, {\n                \"aria-label\": \"trash_button\",\n                border: `${theme.colors.main}`,\n                color: `${theme.colors.main}`,\n                hover: `${theme.colors.main_hover}`,\n                hover_color: \"white\",\n                onClick: () => onDeletePage(item.id),\n                children: /*#__PURE__*/_jsxDEV(RiDeleteBinLine, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 27\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(s.MapContent, {\n          children: /*#__PURE__*/_jsxDEV(s.MapTitle, {\n            href: `/detail/${item.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"content\",\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span\",\n              children: \"Read more...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(s.MapUl, {\n              children: item.tags.split(\",\").map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: tag\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this)).reverse() : \"\", Token ? \"\" : /*#__PURE__*/_jsxDEV(s.Loading, {\n      children: \"\\uB85C\\uADF8\\uC778\\uC744 \\uD574\\uC8FC\\uC138\\uC694...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }, this), menu === 1 ? myPlace.map((item, key) => /*#__PURE__*/_jsxDEV(s.MainMap, {\n      children: /*#__PURE__*/_jsxDEV(s.MainBorder, {\n        children: [/*#__PURE__*/_jsxDEV(s.MapInfo, {\n          children: [/*#__PURE__*/_jsxDEV(s.MapPicture, {\n            children: /*#__PURE__*/_jsxDEV(s.Img, {\n              src:\n              // item.uid === user.uid\n              //   ? user?.photoURL\n              //   : item?.attachmentUrl\n              // `http://localhost:8000/${userInfo[2]?.image}`\n              item.image,\n              alt: \"profile\"\n            }, item.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(s.Info, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"info\",\n              children: [/*#__PURE__*/_jsxDEV(s.MapName, {\n                children: item.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(s.MapTime, {\n                children: item.createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Like\",\n              children: item.creator === userId ? /*#__PURE__*/_jsxDEV(s.InfoBtn, {\n                \"aria-label\": \"trash_button\",\n                border: `${theme.colors.main}`,\n                color: `${theme.colors.main}`,\n                hover: `${theme.colors.main_hover}`,\n                hover_color: \"white\",\n                onClick: () => onDeletePage(item.id),\n                children: /*#__PURE__*/_jsxDEV(RiDeleteBinLine, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 27\n              }, this) : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(s.MapContent, {\n          children: /*#__PURE__*/_jsxDEV(s.MapTitle, {\n            href: `/detail/${item.id}`,\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"content\",\n              children: item.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"span\",\n              children: \"Read more...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(s.MapUl, {\n              children: item.tags.split(\",\").map((tag, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: tag\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 15\n    }, this)).reverse() : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"dDVl0sfBRjJV2b6fQBTdBx5dR80=\", false, function () {\n  return [useNavigate];\n});\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","FcLikePlaceholder","Cookies","s","RiDeleteBinLine","theme","getUser","deletePlaces","getPlaces","useNavigate","jsxDEV","_jsxDEV","Main","_s","cookie","Token","get","userId","menu","setMenu","MainMenu","name","userInfo","setUserInfo","userPlace","setUserPlace","navigate","myPlace","filter","el","creator","console","log","mainCurrent","index","onDeletePage","id","window","confirm","alert","location","reload","getUserInfo","_res$data","res","data","users","getPlaceInfo","_res$data2","places","MainContainer","children","MainImg","className","fileName","_jsxFileName","lineNumber","columnNumber","MainUl","map","onClick","item","key","MainMap","MainBorder","MapInfo","MapPicture","Img","src","image","alt","Info","MapName","username","MapTime","createdAt","InfoBtn","border","colors","main","color","hover","main_hover","hover_color","MapContent","MapTitle","href","title","content","MapUl","tags","split","tag","reverse","Loading","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/Main/Main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FcLikePlaceholder } from \"react-icons/fc\";\nimport { Cookies } from \"react-cookie\";\nimport * as s from \"./style\";\nimport { RiDeleteBinLine } from \"react-icons/ri\";\nimport theme from \"styles/Theme\";\n\nimport { getUser } from \"api/userAPI\";\nimport { deletePlaces, getPlaces } from \"api/writingAPI\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Main = () => {\n  const cookie = new Cookies();\n  const Token = cookie.get(\"token\");\n  // 쿠키에 담긴 userId\n  const userId = cookie.get(\"userId\");\n\n  // 2가지 menu\n  const [menu, setMenu] = useState(0);\n  const MainMenu = [{ name: \"Global Articles\" }, { name: \"My Articles\" }];\n\n  // user 정보\n  const [userInfo, setUserInfo] = useState([]);\n  // place(게시글) 정보\n  const [userPlace, setUserPlace] = useState([]);\n\n  // 이동\n  const navigate = useNavigate();\n  // 내가 작성한 글이 없는 경우\n  // userId가 find로 찾은 place에 없다면\n  const myPlace = userPlace?.filter((el) => el.creator === userId);\n  console.log(\"myPlace\", myPlace);\n\n  const mainCurrent = (index) => {\n    setMenu(index);\n  };\n\n  // 작성한 글 삭제\n  const onDeletePage = async (id) => {\n    if (!window.confirm(\"삭제 하시겠습니까?\")) {\n      alert(\"취소하였습니다.\");\n    } else {\n      await deletePlaces(Token, id);\n      window.location.reload();\n    }\n  };\n\n  useEffect(() => {\n    const getUserInfo = async () => {\n      const res = await getUser();\n      setUserInfo(res?.data?.users);\n    };\n    getUserInfo();\n  }, []);\n  console.log(\"userInfo이다\", userInfo);\n\n  useEffect(() => {\n    const getPlaceInfo = async () => {\n      const res = await getPlaces();\n      setUserPlace(res?.data?.places);\n    };\n    getPlaceInfo();\n  }, []);\n  // console.log(\"userPlace\", userPlace);\n\n  return (\n    <s.MainContainer>\n      <s.MainImg>\n        <h1 className=\"Container\">conduit</h1>\n        <p className=\"Span\">A place to share your knowledge.</p>\n      </s.MainImg>\n      <div>\n        <s.MainUl>\n          {MainMenu.map((el, index) => {\n            return (\n              <li key={index}>\n                <button\n                  className={menu === index ? \"Main-item focused\" : \"Main-item\"}\n                  onClick={() => mainCurrent(index)}\n                >\n                  {el.name}\n                </button>\n              </li>\n            );\n          })}\n        </s.MainUl>\n      </div>\n      {menu === 0\n        ? userPlace\n            .map((item, key) => (\n              <s.MainMap key={key}>\n                <s.MainBorder>\n                  <s.MapInfo>\n                    <s.MapPicture>\n                      <s.Img\n                        key={item.id}\n                        src={\n                          // 이미지 부분은 뭐 ecss머시기 있잖아 그거 확인해보자 메인 프젝한거 확인ㅇ해보자\n                          // item.uid === user.uid\n                          //   ? user?.photoURL\n                          //   : item?.attachmentUrl\n                          userInfo.image\n                          // `http://localhost:8000/${userInfo[2]?.image}`\n                        }\n                        alt=\"profile\"\n                      />\n                    </s.MapPicture>\n                    <s.Info>\n                      <div className=\"info\">\n                        <s.MapName>{item.username}</s.MapName>\n                        <s.MapTime>{item.createdAt}</s.MapTime>\n                      </div>\n                      <div className=\"Like\">\n                        {Token && item.creator === userId ? (\n                          <s.InfoBtn\n                            aria-label=\"trash_button\"\n                            border={`${theme.colors.main}`}\n                            color={`${theme.colors.main}`}\n                            hover={`${theme.colors.main_hover}`}\n                            hover_color=\"white\"\n                            onClick={() => onDeletePage(item.id)}\n                          >\n                            <RiDeleteBinLine />\n                          </s.InfoBtn>\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    </s.Info>\n                  </s.MapInfo>\n                  <s.MapContent>\n                    <s.MapTitle href={`/detail/${item.id}`}>\n                      <h1 className=\"title\">{item.title}</h1>\n                      <p className=\"content\">{item.content}</p>\n                      <span className=\"span\">Read more...</span>\n                      <s.MapUl>\n                        {item.tags.split(\",\").map((tag, index) => (\n                          <li key={index}>{tag}</li>\n                        ))}\n                      </s.MapUl>\n                    </s.MapTitle>\n                  </s.MapContent>\n                </s.MainBorder>\n              </s.MainMap>\n            ))\n            .reverse()\n        : \"\"}\n      {Token ? \"\" : <s.Loading>로그인을 해주세요...</s.Loading>}\n\n      {menu === 1\n        ? myPlace\n            .map((item, key) => (\n              <s.MainMap key={key}>\n                <s.MainBorder>\n                  <s.MapInfo>\n                    <s.MapPicture>\n                      <s.Img\n                        key={item.id}\n                        src={\n                          // item.uid === user.uid\n                          //   ? user?.photoURL\n                          //   : item?.attachmentUrl\n                          // `http://localhost:8000/${userInfo[2]?.image}`\n                          item.image\n                        }\n                        alt=\"profile\"\n                      />\n                    </s.MapPicture>\n                    <s.Info>\n                      <div className=\"info\">\n                        <s.MapName>{item.username}</s.MapName>\n\n                        <s.MapTime>{item.createdAt}</s.MapTime>\n                      </div>\n                      <div className=\"Like\">\n                        {item.creator === userId ? (\n                          <s.InfoBtn\n                            aria-label=\"trash_button\"\n                            border={`${theme.colors.main}`}\n                            color={`${theme.colors.main}`}\n                            hover={`${theme.colors.main_hover}`}\n                            hover_color=\"white\"\n                            onClick={() => onDeletePage(item.id)}\n                          >\n                            <RiDeleteBinLine />\n                          </s.InfoBtn>\n                        ) : (\n                          \"\"\n                        )}\n                      </div>\n                    </s.Info>\n                  </s.MapInfo>\n                  <s.MapContent>\n                    <s.MapTitle href={`/detail/${item.id}`}>\n                      <h1 className=\"title\">{item.title}</h1>\n                      <p className=\"content\">{item.content}</p>\n                      <span className=\"span\">Read more...</span>\n                      <s.MapUl>\n                        {item.tags.split(\",\").map((tag, index) => (\n                          <li key={index}>{tag}</li>\n                        ))}\n                      </s.MapUl>\n                    </s.MapTitle>\n                  </s.MapContent>\n                </s.MainBorder>\n              </s.MainMap>\n            ))\n            .reverse()\n        : \"\"}\n\n      {/* <s.MainMap key={key}>\n        <s.MainBorder>\n          <s.MapInfo>\n            <s.MapPicture>\n              <s.Img\n                key={item.id}\n                src={\n                  // item.uid === user.uid\n                  //   ? user?.photoURL\n                  //   : item?.attachmentUrl\n                  userInfo.image\n                }\n                alt=\"profile\"\n              />\n            </s.MapPicture>\n            <s.Info>\n              <div className=\"info\">\n                <s.MapName>{item.username}</s.MapName>\n\n                <s.MapTime>{item.createdAt}</s.MapTime>\n              </div>\n              <div className=\"Like\">\n                {item.creator === userId ? (\n                  <s.InfoBtn\n                    aria-label=\"trash_button\"\n                    border={`${theme.colors.main}`}\n                    color={`${theme.colors.main}`}\n                    hover={`${theme.colors.main_hover}`}\n                    hover_color=\"white\"\n                    onClick={() => onDeletePage(item.id)}\n                  >\n                    <RiDeleteBinLine />\n                  </s.InfoBtn>\n                ) : (\n                  \"\"\n                )}\n              </div>\n            </s.Info>\n          </s.MapInfo>\n          <s.MapContent>\n            <s.MapTitle href={`/detail/${item.id}`}>\n              <h1 className=\"title\">{item.title}</h1>\n              <p className=\"content\">{item.content}</p>\n              <span className=\"span\">Read more...</span>\n              <s.MapUl>\n                {item.tags.split(\",\").map((tag, index) => (\n                  <li key={index}>{tag}</li>\n                ))}\n              </s.MapUl>\n            </s.MapTitle>\n          </s.MapContent>\n        </s.MainBorder>\n      </s.MainMap> */}\n\n      {/* //   (\n        //     Token ? (Articles ? \"아티클\" : \"작성한글이 없다\") : \"로그인 해주세요\"\n        // ) */}\n\n      {/* // userPlace\n        // .map((item, key) =>\n        //   menu === 0 ?\n            // ( */}\n      {/* <s.MainMap key={key}>\n              <s.MainBorder>\n                <s.MapInfo>\n                  <s.MapPicture>\n                    <s.Img\n                      key={item.id}\n                      src={ */}\n      {/* // 이미지 부분은 뭐 ecss머시기 있잖아 그거 확인해보자 메인 프젝한거 확인ㅇ해보자\n                        // item.uid === user.uid\n                        //   ? user?.photoURL\n                        //   : item?.attachmentUrl\n                        userInfo.image\n                      }\n                      alt=\"profile\"\n                    />\n                  </s.MapPicture>\n                  <s.Info>\n                    <div className=\"info\">\n                      <s.MapName>{item.username}</s.MapName>\n                      <s.MapTime>\n                        {item.createdAt}\n               \n                      </s.MapTime>\n                    </div>\n                    <div className=\"Like\">\n                      {Token && item.creator === userId ? (\n                        <s.InfoBtn\n                          aria-label=\"trash_button\"\n                          border={`${theme.colors.main}`}\n                          color={`${theme.colors.main}`}\n                          hover={`${theme.colors.main_hover}`}\n                          hover_color=\"white\"\n                          onClick={() => onDeletePage(item.id)}\n                        >\n                          <RiDeleteBinLine />\n                        </s.InfoBtn>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </s.Info>\n                </s.MapInfo>\n                <s.MapContent>\n                  <s.MapTitle href={`/detail/${item.id}`}>\n                    <h1 className=\"title\">{item.title}</h1>\n                    <p className=\"content\">{item.content}</p>\n                    <span className=\"span\">Read more...</span>\n                    <s.MapUl>\n                      {item.tags.split(\",\").map((tag, index) => (\n                        <li key={index}>{tag}</li>\n                      ))}\n                    </s.MapUl>\n                  </s.MapTitle>\n                </s.MapContent>\n              </s.MainBorder>\n            </s.MainMap>\n          ) : (\n            \"\"\n          )\n        )\n      .reverse()\n        } */}\n      {/* My Articles 부분 */}\n      {/* {userPlace.map((item, key) =>\n        item.creator === userId && menu === 1 ? (\n          Token ? (\n            <s.MainMap key={key}>\n              <s.MainBorder>\n                <s.MapInfo>\n                  <s.MapPicture>\n                    <s.Img\n                      key={item.id}\n                      src={\n                        // item.uid === user.uid\n                        //   ? user?.photoURL\n                        //   : item?.attachmentUrl\n                        userInfo.image\n                      }\n                      alt=\"profile\"\n                    />\n                  </s.MapPicture>\n                  <s.Info>\n                    <div className=\"info\">\n                      <s.MapName>{item.username}</s.MapName>\n\n                      <s.MapTime>{item.createdAt}</s.MapTime>\n                    </div>\n                    <div className=\"Like\">\n                      {item.creator === userId ? (\n                        <s.InfoBtn\n                          aria-label=\"trash_button\"\n                          border={`${theme.colors.main}`}\n                          color={`${theme.colors.main}`}\n                          hover={`${theme.colors.main_hover}`}\n                          hover_color=\"white\"\n                          onClick={() => onDeletePage(item.id)}\n                        >\n                          <RiDeleteBinLine />\n                        </s.InfoBtn>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </s.Info>\n                </s.MapInfo>\n                <s.MapContent>\n                  <s.MapTitle href={`/detail/${item.id}`}>\n                    <h1 className=\"title\">{item.title}</h1>\n                    <p className=\"content\">{item.content}</p>\n                    <span className=\"span\">Read more...</span>\n                    <s.MapUl>\n                      {item.tags.split(\",\").map((tag, index) => (\n                        <li key={index}>{tag}</li>\n                      ))}\n                    </s.MapUl>\n                  </s.MapTitle>\n                </s.MapContent>\n              </s.MainBorder>\n            </s.MainMap>\n          ) : (\n            <s.Loading>로그인을 해주세요...</s.Loading>\n          )\n        ) : (\n          <s.Loading>작성한 글이 없습니다...</s.Loading>\n        )\n      )} */}\n    </s.MainContainer>\n  );\n};\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}