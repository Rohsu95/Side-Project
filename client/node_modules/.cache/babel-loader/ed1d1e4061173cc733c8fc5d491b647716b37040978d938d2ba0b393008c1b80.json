{"ast":null,"code":"var _jsxFileName = \"/Users/rohsuhyeok/Desktop/Side-Project/src/page/Edit/Edit.js\",\n  _s = $RefreshSig$();\nimport { dbService } from \"fBase\";\nimport { collection, doc, onSnapshot, orderBy, query, updateDoc } from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = _ref => {\n  _s();\n  let {\n    user\n  } = _ref;\n  // 수정 할 정보 불러오기\n  const [nweets, setNweets] = useState([]);\n  // 태그\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  // 인풋 내용\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n    article: \"\"\n  });\n  const navigate = useNavigate();\n  const {\n    title,\n    content,\n    article\n  } = input;\n  const onTotal = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setInput({\n      ...input,\n      [name]: value\n    });\n  };\n  // 수정 부분\n  useEffect(() => {\n    const q = query(collection(dbService, \"editor\"), orderBy(\"createdAt\", \"desc\"));\n    onSnapshot(q, snapshot => {\n      var _nweetArr$, _nweetArr$2, _nweetArr$3, _nweetArr$4;\n      const nweetArr = snapshot.docs.map(document => ({\n        id: document.id,\n        ...document.data()\n      }));\n      setNweets(nweetArr);\n      setInput({\n        title: (_nweetArr$ = nweetArr[0]) === null || _nweetArr$ === void 0 ? void 0 : _nweetArr$.title,\n        content: (_nweetArr$2 = nweetArr[0]) === null || _nweetArr$2 === void 0 ? void 0 : _nweetArr$2.content,\n        article: (_nweetArr$3 = nweetArr[0]) === null || _nweetArr$3 === void 0 ? void 0 : _nweetArr$3.article\n      });\n      setTags((_nweetArr$4 = nweetArr[0]) === null || _nweetArr$4 === void 0 ? void 0 : _nweetArr$4.tags);\n      // console.log(nweetArr);\n    });\n  }, []);\n\n  // Enter 누를 시 태그 생성\n  const onKeyPress = e => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n\n  // 태그 삭제\n  const onDelete = id => {\n    setTagsList(tagsList => tagsList.filter((_, el) => el !== id));\n  };\n  const onClick = async id => {\n    let tagsitem = String(tagsList);\n    try {\n      const editor = {\n        title: title,\n        content: content,\n        article: article,\n        tags: tagsitem,\n        displayName: user.displayName,\n        uid: user.uid\n      };\n      const pageRef = doc(dbService, \"editor\", `${nweets[0].id}`);\n      await updateDoc(pageRef, editor);\n      navigate(\"/\");\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(s.EditorContainer, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(s.TitleInput, {\n        type: \"text\",\n        name: \"title\",\n        value: title,\n        onChange: onTotal,\n        placeholder: \"Article Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.ContentArea, {\n        type: \"text\",\n        name: \"content\",\n        value: content,\n        onChange: onTotal,\n        placeholder: \"Write your article (in markdown)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.TagInput, {\n        type: \"text\",\n        name: \"tags\",\n        value: tags,\n        onChange: e => setTags(e.target.value),\n        onKeyPress: onKeyPress,\n        placeholder: \"Enter tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.TagDiv, {\n        children: tagsList.map((el, id) => /*#__PURE__*/_jsxDEV(s.TagSpan, {\n          children: [/*#__PURE__*/_jsxDEV(s.TagDelete, {\n            \"aria-label\": \"delete_button\",\n            onClick: () => onDelete(id),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), el]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(s.EditorBtn, {\n        \"aria-label\": \"modify_button\",\n        onClick: onClick,\n        children: \"Article Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Edit, \"TrZzbhBdJA879VNdL2UkxGSHKr0=\", false, function () {\n  return [useNavigate];\n});\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["dbService","collection","doc","onSnapshot","orderBy","query","updateDoc","React","useEffect","useState","useNavigate","s","jsxDEV","_jsxDEV","Edit","_ref","_s","user","nweets","setNweets","tags","setTags","tagsList","setTagsList","input","setInput","title","content","article","navigate","onTotal","e","name","value","target","q","snapshot","_nweetArr$","_nweetArr$2","_nweetArr$3","_nweetArr$4","nweetArr","docs","map","document","id","data","onKeyPress","length","key","onItem","updataed","push","onDelete","filter","_","el","onClick","tagsitem","String","editor","displayName","uid","pageRef","error","EditorContainer","children","TitleInput","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","ContentArea","TagInput","TagDiv","TagSpan","TagDelete","EditorBtn","_c","$RefreshReg$"],"sources":["/Users/rohsuhyeok/Desktop/Side-Project/src/page/Edit/Edit.js"],"sourcesContent":["import { dbService } from \"fBase\";\nimport {\n  collection,\n  doc,\n  onSnapshot,\n  orderBy,\n  query,\n  updateDoc,\n} from \"firebase/firestore\";\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as s from \"./style\";\n\nconst Edit = ({ user }) => {\n  // 수정 할 정보 불러오기\n  const [nweets, setNweets] = useState([]);\n  // 태그\n  const [tags, setTags] = useState(\"\");\n  const [tagsList, setTagsList] = useState([]);\n  // 인풋 내용\n  const [input, setInput] = useState({\n    title: \"\",\n    content: \"\",\n    article: \"\",\n  });\n\n  const navigate = useNavigate();\n  const { title, content, article } = input;\n\n  const onTotal = (e) => {\n    const { name, value } = e.target;\n    setInput({\n      ...input,\n      [name]: value,\n    });\n  };\n  // 수정 부분\n  useEffect(() => {\n    const q = query(\n      collection(dbService, \"editor\"),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    onSnapshot(q, (snapshot) => {\n      const nweetArr = snapshot.docs.map((document) => ({\n        id: document.id,\n        ...document.data(),\n      }));\n      setNweets(nweetArr);\n      setInput({\n        title: nweetArr[0]?.title,\n        content: nweetArr[0]?.content,\n        article: nweetArr[0]?.article,\n      });\n      setTags(nweetArr[0]?.tags);\n      // console.log(nweetArr);\n    });\n  }, []);\n\n  // Enter 누를 시 태그 생성\n  const onKeyPress = (e) => {\n    if (e.target.value.length !== 0 && e.key === \"Enter\") {\n      onItem();\n    }\n  };\n  // 태그\n  const onItem = () => {\n    let updataed = [...tagsList];\n    updataed.push(tags);\n    setTagsList(updataed);\n    setTags(\"\");\n  };\n\n  // 태그 삭제\n  const onDelete = (id) => {\n    setTagsList((tagsList) => tagsList.filter((_, el) => el !== id));\n  };\n\n  const onClick = async (id) => {\n    let tagsitem = String(tagsList);\n\n    try {\n      const editor = {\n        title: title,\n        content: content,\n        article: article,\n        tags: tagsitem,\n        displayName: user.displayName,\n        uid: user.uid,\n      };\n      const pageRef = doc(dbService, \"editor\", `${nweets[0].id}`);\n      await updateDoc(pageRef, editor);\n      navigate(\"/\");\n    } catch (error) {\n      // console.log(error);\n    }\n  };\n\n  return (\n    <s.EditorContainer>\n      <div>\n        <s.TitleInput\n          type=\"text\"\n          name=\"title\"\n          value={title}\n          onChange={onTotal}\n          placeholder=\"Article Title\"\n        />\n        <s.ContentArea\n          type=\"text\"\n          name=\"content\"\n          value={content}\n          onChange={onTotal}\n          placeholder=\"Write your article (in markdown)\"\n        />\n        <s.TagInput\n          type=\"text\"\n          name=\"tags\"\n          value={tags}\n          onChange={(e) => setTags(e.target.value)}\n          onKeyPress={onKeyPress}\n          placeholder=\"Enter tags\"\n        />\n        <s.TagDiv>\n          {tagsList.map((el, id) => (\n            <s.TagSpan key={id}>\n              <s.TagDelete\n                aria-label=\"delete_button\"\n                onClick={() => onDelete(id)}\n              >\n                X\n              </s.TagDelete>\n              {el}\n            </s.TagSpan>\n          ))}\n        </s.TagDiv>\n        <s.EditorBtn aria-label=\"modify_button\" onClick={onClick}>\n          Article Modify\n        </s.EditorBtn>\n      </div>\n    </s.EditorContainer>\n  );\n};\nexport default Edit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}